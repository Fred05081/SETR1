\hypertarget{MY__FIFO_8h}{}\doxysection{M\+Y\+\_\+\+F\+I\+F\+O.\+h File Reference}
\label{MY__FIFO_8h}\index{MY\_FIFO.h@{MY\_FIFO.h}}


F\+I\+FO means First In First Out.  


This graph shows which files directly or indirectly include this file\+:
% FIG 0
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{MY__FIFO_8h_a25b51a6cb1d28dec13610b21fb737374}{My\+F\+I\+F\+O\+Init}} (int tamanho)
\begin{DoxyCompactList}\small\item\em Initialize a F\+I\+FO with size {\bfseries{tamanho}}. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{MY__FIFO_8h_aa3f433abcfc07db50a1aa515582887dd}{My\+F\+I\+F\+O\+Insert}} (int add)
\begin{DoxyCompactList}\small\item\em Insert an element in the F\+I\+FO. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8h_a6924a70e7f8335133db957b5dbcfe0ce}{My\+F\+I\+F\+O\+Remove}} (void)
\begin{DoxyCompactList}\small\item\em remover o ultimo elemento inserido. Esta função remove o elemento mais antigo inserido no F\+I\+FO e devolve -\/1 se o F\+I\+FO estiver vazio \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8h_a81c9e4185df8897dd691b1c201a3a955}{My\+F\+I\+F\+O\+Peep}} (void)
\begin{DoxyCompactList}\small\item\em Apenas ver o elemento mais antigo do F\+I\+FO. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8h_a306ac4924fca6f5dc13bd09c5fda298b}{My\+F\+I\+F\+O\+Size}} (void)
\begin{DoxyCompactList}\small\item\em numero total de elemntos Esta função devovlve o numero total de elentos que o F\+I\+FO contém no determinado momento e devolve este valor \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
F\+I\+FO means First In First Out. 

Contém as funções necessárias para criar um F\+I\+FO assim como adicionar ou remover elementos e saber qual o ultimo elemento. \begin{DoxyAuthor}{Author}
Frederico Moreira, Ana Sousa, Pedro Rodrigues 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
22 March 2022 
\end{DoxyDate}
\begin{DoxyRefDesc}{Bug}
\item[\mbox{\hyperlink{bug__bug000001}{Bug}}]No known bugs. \end{DoxyRefDesc}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{MY__FIFO_8h_a25b51a6cb1d28dec13610b21fb737374}\label{MY__FIFO_8h_a25b51a6cb1d28dec13610b21fb737374}} 
\index{MY\_FIFO.h@{MY\_FIFO.h}!MyFIFOInit@{MyFIFOInit}}
\index{MyFIFOInit@{MyFIFOInit}!MY\_FIFO.h@{MY\_FIFO.h}}
\doxysubsubsection{\texorpdfstring{MyFIFOInit()}{MyFIFOInit()}}
{\footnotesize\ttfamily void My\+F\+I\+F\+O\+Init (\begin{DoxyParamCaption}\item[{int}]{tamanho }\end{DoxyParamCaption})}



Initialize a F\+I\+FO with size {\bfseries{tamanho}}. 

A função inicializa um F\+I\+FO (\char`\"{}\+Array\char`\"{}) com tamanho do argumento de entrada {\bfseries{tamanho}} e não retorna nada Example of usage\+: 
\begin{DoxyCode}{0}
\DoxyCodeLine{res = function1(param1, param2);}
\DoxyCodeLine{printf(\textcolor{stringliteral}{"res=\%d\(\backslash\)n"},res);}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em tamanho} & size of the F\+I\+FO. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Não retorna nada. 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8h_aa3f433abcfc07db50a1aa515582887dd}\label{MY__FIFO_8h_aa3f433abcfc07db50a1aa515582887dd}} 
\index{MY\_FIFO.h@{MY\_FIFO.h}!MyFIFOInsert@{MyFIFOInsert}}
\index{MyFIFOInsert@{MyFIFOInsert}!MY\_FIFO.h@{MY\_FIFO.h}}
\doxysubsubsection{\texorpdfstring{MyFIFOInsert()}{MyFIFOInsert()}}
{\footnotesize\ttfamily void My\+F\+I\+F\+O\+Insert (\begin{DoxyParamCaption}\item[{int}]{add }\end{DoxyParamCaption})}



Insert an element in the F\+I\+FO. 

Esta função adiciona um determinado elemento inserido pelo utilizador na posição certa do F\+I\+FO. Tem assim como argumento o elemento a adicionar ao fifo e não retorna nada 
\begin{DoxyCode}{0}
\DoxyCodeLine{res = function1(param1, param2);}
\DoxyCodeLine{printf(\textcolor{stringliteral}{"res=\%d\(\backslash\)n"},res);}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em add} & elemento a adicionar ao F\+I\+FO. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Não retorna nada. 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8h_a81c9e4185df8897dd691b1c201a3a955}\label{MY__FIFO_8h_a81c9e4185df8897dd691b1c201a3a955}} 
\index{MY\_FIFO.h@{MY\_FIFO.h}!MyFIFOPeep@{MyFIFOPeep}}
\index{MyFIFOPeep@{MyFIFOPeep}!MY\_FIFO.h@{MY\_FIFO.h}}
\doxysubsubsection{\texorpdfstring{MyFIFOPeep()}{MyFIFOPeep()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Peep (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



Apenas ver o elemento mais antigo do F\+I\+FO. 


\begin{DoxyCode}{0}
\DoxyCodeLine{res = function1(param1, param2);}
\DoxyCodeLine{printf(\textcolor{stringliteral}{"res=\%d\(\backslash\)n"},res);}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em N\+O\+\_\+args} & sem argumentos \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Retorna o valor mais antigo do F\+I\+FO 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8h_a6924a70e7f8335133db957b5dbcfe0ce}\label{MY__FIFO_8h_a6924a70e7f8335133db957b5dbcfe0ce}} 
\index{MY\_FIFO.h@{MY\_FIFO.h}!MyFIFORemove@{MyFIFORemove}}
\index{MyFIFORemove@{MyFIFORemove}!MY\_FIFO.h@{MY\_FIFO.h}}
\doxysubsubsection{\texorpdfstring{MyFIFORemove()}{MyFIFORemove()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Remove (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



remover o ultimo elemento inserido. Esta função remove o elemento mais antigo inserido no F\+I\+FO e devolve -\/1 se o F\+I\+FO estiver vazio 


\begin{DoxyCode}{0}
\DoxyCodeLine{res = function1(param1, param2);}
\DoxyCodeLine{printf(\textcolor{stringliteral}{"res=\%d\(\backslash\)n"},res);}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em No\+\_\+param} & No parameters \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
retorna -\/1 se nao existir elementos 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8h_a306ac4924fca6f5dc13bd09c5fda298b}\label{MY__FIFO_8h_a306ac4924fca6f5dc13bd09c5fda298b}} 
\index{MY\_FIFO.h@{MY\_FIFO.h}!MyFIFOSize@{MyFIFOSize}}
\index{MyFIFOSize@{MyFIFOSize}!MY\_FIFO.h@{MY\_FIFO.h}}
\doxysubsubsection{\texorpdfstring{MyFIFOSize()}{MyFIFOSize()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Size (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



numero total de elemntos Esta função devovlve o numero total de elentos que o F\+I\+FO contém no determinado momento e devolve este valor 


\begin{DoxyCode}{0}
\DoxyCodeLine{res = function1(param1, param2);}
\DoxyCodeLine{printf(\textcolor{stringliteral}{"res=\%d\(\backslash\)n"},res);}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em no\+\_\+args} & nao tem argumentos \\
\hline
{\em arg2} & Description of the second parameter of the function. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
retorna o numero de elemontos total do F\+I\+FO 
\end{DoxyReturn}
