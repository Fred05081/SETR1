\hypertarget{MY__FIFO_8c}{}\doxysection{M\+Y\+\_\+\+F\+I\+F\+O.\+c File Reference}
\label{MY__FIFO_8c}\index{MY\_FIFO.c@{MY\_FIFO.c}}
{\ttfamily \#include \char`\"{}M\+Y\+\_\+\+F\+I\+F\+O.\+h\char`\"{}}\newline
{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
Include dependency graph for M\+Y\+\_\+\+F\+I\+F\+O.\+c\+:
% FIG 0
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{MY__FIFO_8c_a0592dba56693fad79136250c11e5a7fe}{M\+A\+X\+\_\+\+S\+I\+ZE}}~10
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{MY__FIFO_8c_a25b51a6cb1d28dec13610b21fb737374}{My\+F\+I\+F\+O\+Init}} (int tamanho)
\begin{DoxyCompactList}\small\item\em Initialize a F\+I\+FO with size {\bfseries{tamanho}}. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{MY__FIFO_8c_aa3f433abcfc07db50a1aa515582887dd}{My\+F\+I\+F\+O\+Insert}} (int add)
\begin{DoxyCompactList}\small\item\em Insert an element in the F\+I\+FO. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8c_a6924a70e7f8335133db957b5dbcfe0ce}{My\+F\+I\+F\+O\+Remove}} (void)
\begin{DoxyCompactList}\small\item\em remover o ultimo elemento inserido. Esta função remove o elemento mais antigo inserido no F\+I\+FO e devolve -\/1 se o F\+I\+FO estiver vazio \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8c_a81c9e4185df8897dd691b1c201a3a955}{My\+F\+I\+F\+O\+Peep}} (void)
\begin{DoxyCompactList}\small\item\em Apenas ver o elemento mais antigo do F\+I\+FO. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{MY__FIFO_8c_a306ac4924fca6f5dc13bd09c5fda298b}{My\+F\+I\+F\+O\+Size}} (void)
\begin{DoxyCompactList}\small\item\em numero total de elemntos Esta função devovlve o numero total de elentos que o F\+I\+FO contém no determinado momento e devolve este valor \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Macro Definition Documentation}
\mbox{\Hypertarget{MY__FIFO_8c_a0592dba56693fad79136250c11e5a7fe}\label{MY__FIFO_8c_a0592dba56693fad79136250c11e5a7fe}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MAX\_SIZE@{MAX\_SIZE}}
\index{MAX\_SIZE@{MAX\_SIZE}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MAX\_SIZE}{MAX\_SIZE}}
{\footnotesize\ttfamily \#define M\+A\+X\+\_\+\+S\+I\+ZE~10}



\doxysubsection{Function Documentation}
\mbox{\Hypertarget{MY__FIFO_8c_a25b51a6cb1d28dec13610b21fb737374}\label{MY__FIFO_8c_a25b51a6cb1d28dec13610b21fb737374}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MyFIFOInit@{MyFIFOInit}}
\index{MyFIFOInit@{MyFIFOInit}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MyFIFOInit()}{MyFIFOInit()}}
{\footnotesize\ttfamily void My\+F\+I\+F\+O\+Init (\begin{DoxyParamCaption}\item[{int}]{tamanho }\end{DoxyParamCaption})}



Initialize a F\+I\+FO with size {\bfseries{tamanho}}. 

A função inicializa um F\+I\+FO (\char`\"{}\+Array\char`\"{}) com tamanho do argumento de entrada {\bfseries{tamanho}} e não retorna nada Example of usage\+: 
\begin{DoxyCode}{0}
\DoxyCodeLine{   \textcolor{keywordflow}{if} (tamanho > \mbox{\hyperlink{MY__FIFO_8c_a0592dba56693fad79136250c11e5a7fe}{MAX\_SIZE}})}
\DoxyCodeLine{    \{}
\DoxyCodeLine{        size\_T = \mbox{\hyperlink{MY__FIFO_8c_a0592dba56693fad79136250c11e5a7fe}{MAX\_SIZE}};}
\DoxyCodeLine{    \}}
\DoxyCodeLine{    \textcolor{keywordflow}{else}\{}
\DoxyCodeLine{}
\DoxyCodeLine{        size\_T = tamanho;}
\DoxyCodeLine{    \}}
\DoxyCodeLine{    head = 0;}
\DoxyCodeLine{    tail = 0;}
\DoxyCodeLine{    \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} i = 0; i < size\_T; i++)}
\DoxyCodeLine{    \{}
\DoxyCodeLine{        fifo\_array[i] = 0;}
\DoxyCodeLine{    \}}
\DoxyCodeLine{\}}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em tamanho} & size of the F\+I\+FO. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Não retorna nada. 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8c_aa3f433abcfc07db50a1aa515582887dd}\label{MY__FIFO_8c_aa3f433abcfc07db50a1aa515582887dd}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MyFIFOInsert@{MyFIFOInsert}}
\index{MyFIFOInsert@{MyFIFOInsert}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MyFIFOInsert()}{MyFIFOInsert()}}
{\footnotesize\ttfamily void My\+F\+I\+F\+O\+Insert (\begin{DoxyParamCaption}\item[{int}]{add }\end{DoxyParamCaption})}



Insert an element in the F\+I\+FO. 

Esta função adiciona um determinado elemento inserido pelo utilizador na posição certa do F\+I\+FO. Tem assim como argumento o elemento a adicionar ao fifo e não retorna nada 
\begin{DoxyCode}{0}
\DoxyCodeLine{   \textcolor{keywordtype}{void} \mbox{\hyperlink{MY__FIFO_8c_aa3f433abcfc07db50a1aa515582887dd}{MyFIFOInsert}}(\textcolor{keywordtype}{int} add)}
\DoxyCodeLine{\{   }
\DoxyCodeLine{    \textcolor{keywordflow}{if} (flag==0)\{}
\DoxyCodeLine{}
\DoxyCodeLine{        fifo\_array[head \% size\_T] = add;}
\DoxyCodeLine{        head++;}
\DoxyCodeLine{        flag=1;}
\DoxyCodeLine{    \}}
\DoxyCodeLine{    \textcolor{keywordflow}{else}\{}
\DoxyCodeLine{}
\DoxyCodeLine{        \textcolor{keywordflow}{if} ((head \% size\_T) == (tail \% size\_T) )\{}
\DoxyCodeLine{            printf(\textcolor{stringliteral}{"the oldest element are removed and inserted a new value\(\backslash\)n"});}
\DoxyCodeLine{            fifo\_array[head \% size\_T] = add;}
\DoxyCodeLine{            head++;}
\DoxyCodeLine{            tail++;}
\DoxyCodeLine{        \}}
\DoxyCodeLine{        \textcolor{keywordflow}{else}\{}
\DoxyCodeLine{            fifo\_array[head \% size\_T] = add;}
\DoxyCodeLine{            head++;}
\DoxyCodeLine{        \}  }
\DoxyCodeLine{    \}}
\DoxyCodeLine{    }
\DoxyCodeLine{    }
\DoxyCodeLine{\}}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em add} & elemento a adicionar ao F\+I\+FO. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Não retorna nada. 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8c_a81c9e4185df8897dd691b1c201a3a955}\label{MY__FIFO_8c_a81c9e4185df8897dd691b1c201a3a955}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MyFIFOPeep@{MyFIFOPeep}}
\index{MyFIFOPeep@{MyFIFOPeep}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MyFIFOPeep()}{MyFIFOPeep()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Peep (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



Apenas ver o elemento mais antigo do F\+I\+FO. 


\begin{DoxyCode}{0}
\DoxyCodeLine{\textcolor{keywordtype}{int} \mbox{\hyperlink{MY__FIFO_8c_a81c9e4185df8897dd691b1c201a3a955}{MyFIFOPeep}}(\textcolor{keywordtype}{void})}
\DoxyCodeLine{\{}
\DoxyCodeLine{    \textcolor{keywordtype}{int} num;}
\DoxyCodeLine{}
\DoxyCodeLine{    num = fifo\_array[tail \% size\_T];}
\DoxyCodeLine{    \textcolor{comment}{//printf("O elemento mais antigo é \%d",num);}}
\DoxyCodeLine{    \textcolor{keywordflow}{return} num;}
\DoxyCodeLine{\}}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em N\+O\+\_\+args} & sem argumentos \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Retorna o valor mais antigo do F\+I\+FO 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8c_a6924a70e7f8335133db957b5dbcfe0ce}\label{MY__FIFO_8c_a6924a70e7f8335133db957b5dbcfe0ce}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MyFIFORemove@{MyFIFORemove}}
\index{MyFIFORemove@{MyFIFORemove}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MyFIFORemove()}{MyFIFORemove()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Remove (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



remover o ultimo elemento inserido. Esta função remove o elemento mais antigo inserido no F\+I\+FO e devolve -\/1 se o F\+I\+FO estiver vazio 


\begin{DoxyCode}{0}
\DoxyCodeLine{   \textcolor{keywordtype}{int} \mbox{\hyperlink{MY__FIFO_8c_a6924a70e7f8335133db957b5dbcfe0ce}{MyFIFORemove}}(\textcolor{keywordtype}{void})}
\DoxyCodeLine{\{}
\DoxyCodeLine{    \textcolor{keywordtype}{int} const1=0;}
\DoxyCodeLine{    \textcolor{keywordflow}{if} (tail == head)}
\DoxyCodeLine{    \{   printf(\textcolor{stringliteral}{"O FIFO está vazio\(\backslash\)n"});}
\DoxyCodeLine{        \textcolor{keywordflow}{return} -\/1;}
\DoxyCodeLine{        }
\DoxyCodeLine{    \}}
\DoxyCodeLine{}
\DoxyCodeLine{    \textcolor{keywordflow}{else}}
\DoxyCodeLine{    \{   const1= fifo\_array[tail \% size\_T];}
\DoxyCodeLine{        fifo\_array[tail \% size\_T] = 0;}
\DoxyCodeLine{        tail++;}
\DoxyCodeLine{        \textcolor{keywordflow}{return} const1;}
\DoxyCodeLine{    \}}
\DoxyCodeLine{\}}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em No\+\_\+param} & No parameters \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
retorna -\/1 se nao existir elementos 
\end{DoxyReturn}
\mbox{\Hypertarget{MY__FIFO_8c_a306ac4924fca6f5dc13bd09c5fda298b}\label{MY__FIFO_8c_a306ac4924fca6f5dc13bd09c5fda298b}} 
\index{MY\_FIFO.c@{MY\_FIFO.c}!MyFIFOSize@{MyFIFOSize}}
\index{MyFIFOSize@{MyFIFOSize}!MY\_FIFO.c@{MY\_FIFO.c}}
\doxysubsubsection{\texorpdfstring{MyFIFOSize()}{MyFIFOSize()}}
{\footnotesize\ttfamily int My\+F\+I\+F\+O\+Size (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



numero total de elemntos Esta função devovlve o numero total de elentos que o F\+I\+FO contém no determinado momento e devolve este valor 


\begin{DoxyCode}{0}
\DoxyCodeLine{ *\textcolor{keywordtype}{int} \mbox{\hyperlink{MY__FIFO_8c_a306ac4924fca6f5dc13bd09c5fda298b}{MyFIFOSize}}(\textcolor{keywordtype}{void})}
\DoxyCodeLine{\{}
\DoxyCodeLine{    \textcolor{keywordtype}{int} size;}
\DoxyCodeLine{    size = head -\/ tail;}
\DoxyCodeLine{    \textcolor{comment}{//printf("FIFO Size:  \%d", size);}}
\DoxyCodeLine{    \textcolor{keywordflow}{return} size;}
\DoxyCodeLine{\}}
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em no\+\_\+args} & nao tem argumentos \\
\hline
{\em arg2} & Description of the second parameter of the function. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
retorna o numero de elemontos total do F\+I\+FO 
\end{DoxyReturn}
